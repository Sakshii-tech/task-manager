// schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  createdAt DateTime @default(now()) @map("created_at")

  tasks     Task[]

@@map("users")
}



model Project {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now()) @map("created_at")

  tasks       Task[]

  @@map("projects")
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  status      String    @default("pending")
  dueDate     DateTime? @map("due_date")
  createdAt   DateTime  @default(now()) @map("created_at")

  // Relations
  userId      Int?      @map("user_id")
  user        User?     @relation(fields: [userId], references: [id], onDelete: SetNull)

  projectId   Int?      @map("project_id")
  project     Project?  @relation(fields: [projectId], references: [id], onDelete: SetNull)

  attachments TaskAttachment[]

  @@map("tasks")
}

model TaskAttachment {
  id         Int      @id @default(autoincrement())
  fileUrl    String   @map("file_url")
  uploadedAt DateTime @default(now()) @map("uploaded_at")

  taskId     Int      @map("task_id")
  task       Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)

  @@map("task_attachments")
}
